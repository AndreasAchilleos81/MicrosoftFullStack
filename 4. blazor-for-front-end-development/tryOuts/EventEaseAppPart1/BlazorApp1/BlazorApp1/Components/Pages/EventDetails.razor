@page "/event/{id:guid}"
@rendermode InteractiveServer
@using Shared.Models
@using Shared.Interfaces;
@inject ILogger<EventDetails> Logger;
@inject IEventCardDataService EventCardDataService;

<h3>EventDetails</h3>
@if (isNotFound)
{
	<div class="alert alert-warning">
		Event not found or has been deleted.<br />
		<NavLink href="/eventsList">Return to Events List</NavLink>
	</div>
}
else if (isDeleted)
{
	<div class="success-message">
		Event has been delted Successfully! <br />
		<NavLink href="/eventsList">Return to Events List</NavLink>
	</div>
}
else if (isEditing)
{
	<AddEvent Card="@card" OnSuccess="HandleEdit"/>
}
else
{
	<div class="event-card-details">
		<h4>@card.Name</h4>
		<p><strong>Description:</strong> @card.Description</p>
		<p><strong>Is Public:</strong> @(card.IsPublic ? "Yes" : "No")</p>
		<p><strong>Max Attendees:</strong> @card.MaxAttendees</p>
		<p><strong>Current Attendees:</strong> @card.CurrentAttendees</p>
		<div class="horizontal">
			<button class="btn-primary" @onclick="() => DeleteCard(card.Id)"> Delete </button>
			<button class="btn-primary" @onclick="() => EditCard(card)"> Edit Card </button>
		</div>
	</div>
}


@code {
	[Parameter]
	public Guid Id { get; set; }
	private EventCard? card = null;

	private bool isNotFound = false;
	private bool isDeleted = false;
	private bool isEditing = false;

	protected override async Task OnInitializedAsync()
	{
		Logger.LogInformation("EventDetails page initialized");
		card = await EventCardDataService.GetEventCardByIdAsync(Id.ToString());
		if (card == null)
		{
			Logger.LogInformation("EventCard not found");
			isNotFound = true;
		}
		else
		{
			Logger.LogInformation($"EventCard found: {card.ToString()}");
		}
	}

	private async Task DeleteCard(string cardId)
	{
		if (card != null)
		{
			await EventCardDataService.DeleteEventCardAsync(Guid.Parse(cardId));
			Logger.LogInformation($"EventCard deleted: {card.ToString()}");
			isDeleted = true;
		}
	}

	private async Task EditCard(EventCard card)
	{
		isEditing = true;
	}

	private void HandleEdit(bool isSuccess)
	{
		isEditing = false;
	}
}